var _iosphere$elm_network_graph$Graph_Colored_Node$encode = function (record) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'color',
				_1: _elm_lang$core$Json_Encode$string(record.color)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'id',
					_1: _elm_lang$core$Json_Encode$string(record.identifier)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'name',
						_1: _elm_lang$core$Json_Encode$list(
							A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, record.name))
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _iosphere$elm_network_graph$Graph_Colored_Node$init = F3(
	function (color, identifier, name) {
		return {color: color, identifier: identifier, name: name};
	});
var _iosphere$elm_network_graph$Graph_Colored_Node$decode = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			_elm_lang$core$Json_Decode$succeed(_iosphere$elm_network_graph$Graph_Colored_Node$init),
			A2(_elm_lang$core$Json_Decode$field, 'color', _elm_lang$core$Json_Decode$string)),
		A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string)),
	A2(
		_elm_lang$core$Json_Decode$field,
		'name',
		_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string)));
var _iosphere$elm_network_graph$Graph_Colored_Node$fromNode = F2(
	function (node, color) {
		return A3(_iosphere$elm_network_graph$Graph_Colored_Node$init, color, node.identifier, node.name);
	});
